# Travis script for test-building this library.
language: c
dist: trusty
sudo: false

before_install:
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_1.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :1 -ac -screen 0 1280x1024x16"
  - sleep 3
  - export DISPLAY=:1.0
  - wget http://downloads.arduino.cc/arduino-1.8.5-linux64.tar.xz
  - tar xf arduino-1.8.5-linux64.tar.xz
  - mv arduino-1.8.5 $HOME/arduino_ide
  - export PATH="$HOME/arduino_ide:$PATH"
  #
  # arduino_lorawan looks for project_config things, so we must put
  # things in the canonical place
  #
  - export LIBPATH="$HOME/arduino_ide/libraries"
  - export THISLIB="$LIBPATH/Catena-mcciadk"
  - export REQLIBS=
  - ln -s $PWD $THISLIB
  - export NONCEDIR="$PWD/tmp"
  - export UNITDIR="$NONCEDIR/$(basename $MYUNIT .ino)"

  #
  # functions to generate the board settings for SAMD, STM32L0, ...
  # keep args for these aligned for any common options. $1 is always board name, $2 is region.
  #
  # Changes to the BSP may break this build, sorry!
  #
  - "function _samdopts { echo mcci:samd:${1:-mcci_catena_4450}:lorawan_region=${2:-us915} ; }"
  - "function _stm32l0opts { echo mcci:stm32:Catena:pnum=${1:-CATENA_4551}:opt=${3:-osstd}:xserial=${4:-generic}:usb=${5:-none}:upload_method=${6:-STLink} ; }"
  #
  # Put one or more arguments into lmic_project_config.h as  `#define $i\n`
  - function _maketestheader { UNIT="$1" ; shift ; UNITDIR="$NONCEDIR/$(basename $UNIT .ino)" ; rm -rf $UNITDIR ; mkdir -p $UNITDIR ; { for i in "$@" ; do printf '#include "%s"\n' "$i" ; done ; printf 'void setup() {}\nvoid loop() {}\n' ; } > $UNITDIR/$UNIT ; echo $UNITDIR/$UNIT ; }

  #
  # Handy macro to deal with expected failures.
  - 'function _expect_failure { if [ $? -eq 0 ]; then echo "Suceeded, but should have failed!" ; echo project_config/lmic_project_config.h ; cat $HOME/arduino_ide/libraries/arduino-lmic/project_config/lmic_project_config.h ; return 1 ; else echo "Failed, as expected"; return 0 ; fi ; }'
  #
  # modify the board manager preferences to point to our BSPs.
  - arduino --pref "boardsmanager.additional.urls=https://github.com/mcci-catena/arduino-boards/raw/master/BoardManagerFiles/package_mcci_index.json" --save-prefs
  - arduino --pref "compiler.warning_level=more" --save-prefs

install:
 - for i in $REQLIBS ; do echo $i ; git clone --depth=1 https://github.com/mcci-catena/${i}.git $LIBPATH/$i || break ; done
 - 'export UNIT_HDR_BASE=$(_maketestheader headertest_base.ino mcciadk_baselib.h ) ; echo "UNIT_HDR_BASE: " "$UNIT_HDR_BASE" ; cat "$UNIT_HDR_BASE"'
 - 'export UNIT_HDR_ENV=$(_maketestheader headertest_env.ino mcciadk_env.h ) ; echo "UNIT_HDR_ENV: " "$UNIT_HDR_ENV" ; cat "$UNIT_HDR_ENV"'
 - 'export UNIT_HDR_GUID=$(_maketestheader headertest_guid.ino mcciadk_guid.h ) ; echo "UNIT_HDR_GUID: " "$UNIT_HDR_GUID" ; cat "$UNIT_HDR_GUID"'
 - arduino --install-boards mcci:samd
# - arduino --install-boards mcci:stm32

script:
#
# show the output of the config commands for reference.
 - "echo $(_stm32l0opts) $(_stm32l0opts '' projcfg)"
 - "echo $(_samdopts) $(_samdopts '' projcfg)"

#
# test the examples
 - arduino --verify --board $(_samdopts) $UNIT_HDR_BASE
 - arduino --verify --board $(_samdopts) $UNIT_HDR_ENV
 - arduino --verify --board $(_samdopts) $UNIT_HDR_GUID

#
# *** TESTS FOR STM32L0 / Catena 4551 ****
#  make sure you install the BSP above.
#
# - arduino --verify --board $(_stm32l0opts) $THISLIB/examples/header_test/header_test.ino

### end of file ###